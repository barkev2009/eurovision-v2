import { createSlice } from '@reduxjs/toolkit';

const initialState = {
  ratings: [
    {   
        id: '1',
        userId: '123',
        purity: 0,
        difficulty: 0,
        show: 0,
        originality: 0,
        sympathy: 0,
        score: 2.0,
        countryName: 'Norway',
        iconPath: process.env.REACT_APP_API_URL + '/ed263b45-e838-4cbd-a966-3329d101e2ed.svg',
        artistName: 'Alessandra Mele',
        songName: 'Queen of Kings',
        entryOrder: 1,
        contestStep: 'FIRST_SEMIFINAL',
        qualifier: false,
        placeInFinal: null
    },
    {   
        id: '2',
        userId: '123',
        purity: 0,
        difficulty: 0,
        show: 0,
        originality: 0,
        sympathy: 0,
        score: 3.25,
        countryName: 'Finland',
        iconPath: process.env.REACT_APP_API_URL + '/49d14eb8-e613-4ac4-b036-dc4e80ce1eb3.svg',
        artistName: 'Kaarjia',
        songName: 'Cha Cha Cha',
        entryOrder: 2,
        contestStep: 'GRAND_FINAL',
        qualifier: false,
        placeInFinal: 1
    },
    {   
        id: '3',
        userId: '123',
        purity: 0,
        difficulty: 0,
        show: 0,
        originality: 0,
        sympathy: 0,
        score: 4.55,
        countryName: 'Russia',
        iconPath: process.env.REACT_APP_API_URL + '/583f0bd6-cb04-4f8d-8f1d-a8b8e2641d00.svg',
        artistName: 'Sergey Lazarev',
        songName: 'Scream',
        entryOrder: 3,
        contestStep: 'FIRST_SEMIFINAL',
        qualifier: false,
        placeInFinal: null
    }
  ]
};

export const ratingSlice = createSlice({
  name: 'ratings',
  initialState,
  reducers: {
    
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    // builder
    //   .addCase(incrementAsync.pending, (state) => {
    //     state.status = 'loading';
    //   })
    //   .addCase(incrementAsync.fulfilled, (state, action) => {
    //     state.status = 'idle';
    //     state.value += action.payload;
    //   });
  },
});

// export const { increment, decrement, incrementByAmount } = counterSlice.actions;

export default ratingSlice.reducer;
